;******************************************************************************
; file    platformio.ini
;******************************************************************************
; brief   General settings of the project, including custom upload scripts
;******************************************************************************
; author  Florian Baumgartner, Luca Jost
; version 1.0
; date    2023-01-11
;******************************************************************************
; MIT License
;
; Copyright (c) 2023 Crelin - Florian Baumgartner
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell          
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in
; all copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
; SOFTWARE.
;******************************************************************************

[env:custom_board]

platform = espressif32
board = adafruit_feather_esp32s3_nopsram
framework = arduino
board_build.variants_dir = variants
board_build.variant = custom_board

board_build.boot=qio	
board_build.bootloader=qio
board_build.flash_mode = qio							; QIO must be used, otherwise SPI Flash Library does not work, correct bootloader necessary!
board_build.flash_size=8MB
board_build.bootloader_addr=0x1000
board_build.partitions = partitions_custom.csv
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
board_build.mcu = esp32s3


build_flags = '-DCFG_TUSB_CONFIG_FILE="sdkconfig.h"'    ; Use default TinyUSB configuration
			  '-DFIRMWARE_VERSION="0.1"'				; Enter Firmware Version here
			  '-DUSB_MANUFACTURER="Crelin 2022"'        ; USB Manufacturer string
			  '-DUSB_PRODUCT="Custom Board"'            ; USB Product String
			  -D USB_SERIAL="0"							; Enter Device Serial Number here
			  -D USB_VID=0x239A                         ; Default Adafruit USB VID
			  -D USB_PID=0x80AB                         ; Default Adafruit USB PID
			  -D CFG_TUSB_RHPORT0_MODE=OPT_MODE_DEVICE
			  -D CFG_TUSB_OS=OPT_OS_FREERTOS
			  -D CFG_TUD_MAINTASK_SIZE=4096
			  -D CFG_TUD_ENDOINT0_SIZE=64
			  -D CONFIG_TINYUSB_CDC_ENABLED=1
			  -D CFG_TUD_CDC=CONFIG_TINYUSB_CDC_ENABLED
			  -D CFG_TUD_MSC=CONFIG_TINYUSB_MSC_ENABLED
			  -D CFG_TUD_HID=CONFIG_TINYUSB_HID_ENABLED
			  -D CFG_TUD_MIDI=CONFIG_TINYUSB_MIDI_ENABLED
			  -D CFG_TUD_VIDEO=CONFIG_TINYUSB_VIDEO_ENABLED
			  -D CFG_TUD_CUSTOM_CLASS=CONFIG_TINYUSB_CUSTOM_CLASS_ENABLED
			  -D CFG_TUD_ENABLED=true
			  -D CFG_TUD_DFU=true
			  -D CFG_TUD_DFU_RUNTIME=CONFIG_TINYUSB_DFU_RT_ENABLED
			  -D CFG_TUD_CDC_RX_BUFSIZE=CONFIG_TINYUSB_CDC_RX_BUFSIZE
			  -D CFG_TUD_CDC_TX_BUFSIZE=CONFIG_TINYUSB_CDC_TX_BUFSIZE
			  -D CFG_TUD_MSC_BUFSIZE=CONFIG_TINYUSB_MSC_BUFSIZE
			  -D CFG_TUD_HID_BUFSIZE=CONFIG_TINYUSB_HID_BUFSIZE
			  -D CFG_TUD_MIDI_RX_BUFSIZE=CONFIG_TINYUSB_MIDI_RX_BUFSIZE
			  -D CFG_TUD_MIDI_TX_BUFSIZE=CONFIG_TINYUSB_MIDI_TX_BUFSIZE
			  -D CFG_TUD_VIDEO_STREAMING=CONFIG_TINYUSB_VIDEO_STREAMING_IFS
			  -D CFG_TUD_VIDEO_STREAMING_EP_BUFSIZE=CONFIG_TINYUSB_VIDEO_STREAMING_BUFSIZE
			  -D CFG_TUD_VENDOR_RX_BUFSIZE=CONFIG_TINYUSB_VENDOR_RX_BUFSIZE
			  -D CFG_TUD_VENDOR_TX_BUFSIZE=CONFIG_TINYUSB_VENDOR_TX_BUFSIZE
			  -D CFG_TUD_VENDOR=CONFIG_TINYUSB_VENDOR_ENABLED
			  -D CFG_TUD_DFU_XFER_BUFSIZE=256
			  -D TUP_DCD_ENDPOINT_MAX=8
			  -D CONFIG_TINYUSB_DFU_RT_ENABLED=1
			  -D ARDUINO_USB_MODE=true
			  -D HTTP_UPLOAD_BUFLEN=512
			  -D CONFIG_SPIRAM_CACHE_WORKAROUND
			  -D DISABLE_ALL_LIBRARY_WARNINGS
			  -D BOARD_HAS_PSRAM
			  -D CONFIG_TINYUSB_ENABLED
			  -Iinclude
			  

debug_tool = esp-prog
debug_init_break = tbreak setup
debug_load_mode = always

extra_scripts = tools/upload_script.py
upload_protocol = custom
upload_flags = ${env:custom_board.build_flags}  		; Pass build flags as argument to python script
			   ${env:custom_board.board_build.mcu}  	; Pass MCU Type as argument to python script
			   COMPARE_SERIAL_NUMBER=false				; Download only to devices with specified USB Serial Number, otherwise to all connected devices
			   USE_SERIAL_NUMBER_LIST=false             ; Overwrite single USB Serial Number (USB_SERIAL) with list of accepted Serial Numbers
			   SERIAL_NUMBER_LIST=["0", "1", "2"]	    ; List of specific USB Serial Numbers to program and open COM-Port (if enabled)
			   ENABLE_AUTOMATIC_CONSOLE=true            ; Enables automatic opening of serial ports
			   COMPARE_VID_PID_CONSOLE=true             ; Open only COM-Ports with same VID/PID as specified above (USB_VID, USB_PID)
			   USE_TABS_CONSOLE=false                   ; Use Windows Terminal Tabs-Feature (One Tab for each COM-Port) -> Not fully implemented yet


lib_deps = 
	Adafruit TinyUSB Library
	Adafruit SPIFlash
	SdFat - Adafruit Fork
	ArduinoJson
